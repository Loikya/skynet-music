#include <unistd.h>
#include <stdlib.h>
#include <stdio.h>
#include <sys/wait.h>
#include <fcntl.h>

int main()
{
    int fildes[2];
    ssize_t nbytes;
    pid_t cpid, pfd, cfd;
    int status = pipe(fildes);
    if (status == -1 ) { /* an error occurred */ }
    pfd = open("test.txt", O_WRONLY|O_NONBLOCK);
    if (pfd == -1 )
    {
        printf("File open error!");
        exit(EXIT_FAILURE);
    }
    cpid = fork();
    switch (cpid) {
        case -1: /* Процесс не создан */ break;
        case 0: /* Дочерний процесс читает из канала */
            close(fildes[1]);
            nbytes = read(fildes[0], &cfd, sizeof(int));
            close(fildes[0]);
            write(cfd, "Hello world!", 12);
            printf("Write done!");
            close(cfd);
            exit(EXIT_SUCCESS);
        default: /* Родительский процесс передает данные дочернему */
            close(fildes[0]);
            write(fildes[1], &pfd, sizeof(int));
            waitpid(cpid, &status, 0);
            close(fildes[1]); /* Чтобы показать, что данные все.*/
            waitpid(cpid, &status, 0);
            exit(EXIT_SUCCESS);
    }
}
